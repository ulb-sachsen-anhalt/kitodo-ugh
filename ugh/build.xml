<?xml version="1.0"?>
<project name="Kitodo" default="dist" xmlns:artifact="urn:maven-artifact-ant">

    <!-- build properties -->
    <property name="build.javac.target" value="1.7"/>
    <property name="build.javac.source" value="1.7"/>

    <!-- Distribution specific settings. -->
    <property name="dist.name" value="kitodo-ugh" />
    <property name="dist.version" value="2.1.3" />

    <!-- Directory settings -->
    <property name="dir.lib" value="./lib" />
    <property name="dir.build" location="./build" />
    <property name="dir.build.src" location="${dir.build}/src" />
    <property name="dir.dist" location="./dist" />
    <property name="dir.src" location="./src" />

    <path id="classpath">
        <fileset dir="${dir.lib}" />
    </path>

    <!-- Clean up generated and compiled files. -->
    <target name="clean" description="Clean up generated and compiled files.">
        <delete dir="${dir.build}" />
        <delete dir="${dir.dist}" />
    </target>

    <!-- Create needed directories -->
    <target name="createDirs" description="Create needed directories">
        <mkdir dir="${dir.build}" />
        <property name="dir.build.classes" value="${dir.build}/classes" />
        <mkdir dir="${dir.build.classes}" />
        <mkdir dir="${dir.build.src}" />
        <mkdir dir="${dir.dist}" />
    </target>

    <!-- copy sources to build directory -->
    <target name="copySources" description="Copy the sources to the build directory">
        <copy todir="${dir.build.src}">
            <fileset dir="${dir.src}" />
        </copy>
    </target>

    <!-- Normal build of application -->
    <target name="compile" depends="copySources, createDirs, writeVersion" description="Normal build of application.">
        <javac srcdir="${dir.build.src}" destdir="${dir.build.classes}" source="${build.javac.source}" target="${build.javac.target}" encoding="UTF8"  debug="true" debuglevel="lines,vars,source" includeantruntime="false" >
            <compilerarg value="-Xlint" />
            <compilerarg value="-Xlint:-path" />
            <classpath refid="classpath" />
        </javac>
    </target>

    <!-- Build of ugh jar file. -->
    <target name="jar" depends="compile" description="Build of ugh jar file.">
        <jar destfile="${dir.dist}/${dist.name}-${dist.version}.jar" basedir="${dir.build.classes}" />
    </target>

    <!-- Build single ugh jar file. -->
    <target name="dist" depends="clean, jar" description="Build single ugh jar file.">
        <echo>Build was successful.</echo>
    </target>

    <!-- Build all, not really needed yet. -->
    <target name="all" depends="dist" description="Build all, not really needed yet." />

    <target name="git.revision" description="Store git revision in ${repository.version}" >
        <exec executable="git" outputproperty="git.revision" failifexecutionfails="false" errorproperty="" >
            <arg value="describe"/>
            <arg value="--tags"/>
            <arg value="--always"/>
            <arg value="HEAD"/>
        </exec>
        <condition property="repository.version" value="${git.revision}" else="unknown">
            <and>
                <isset property="git.revision"/>
                <length string="${git.revision}" trim="yes" length="0" when="greater"/>
            </and>
        </condition>
    </target>

    <!-- rewrite the Version file with informations from the build system, not used yet-->
    <target name="writeVersion" depends="git.revision" description="writes the build version">
        <tstamp>
            <format property="date" pattern="dd−MMMM−yyyy" locale="en" />
        </tstamp>
        <echo file="${dir.build.src}/ugh/Version.java">
            package ugh;
            /*
            DO NOT CHANGE THIS FILE, IT'S GENERATED BY ANT!
            */
            public class Version {
                public final static String VERSION = "${dist.name}";
                public final static String BUILDVERSION = "${dist.name}-${dist.version}-${git.revision}";
                public final static String BUILDDATE = "${date}";
                public static String PROGRAMNAME = "Kitodo";
            }
        </echo>
    </target>
</project>
